<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \Application\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'uniqueId', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'programId', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'url', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'productImage', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'property', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'feed', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'createdBy', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'modifiedBy', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'creationDate', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'modifiedDate', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'status', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'category'];
        }

        return ['__isInitialized__', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'uniqueId', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'programId', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'url', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'productImage', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'property', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'feed', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'createdBy', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'modifiedBy', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'creationDate', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'modifiedDate', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'status', '' . "\0" . 'Application\\Entity\\Product' . "\0" . 'category'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUniqueId($uniqueId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUniqueId', [$uniqueId]);

        return parent::setUniqueId($uniqueId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueId', []);

        return parent::getUniqueId();
    }

    /**
     * {@inheritDoc}
     */
    public function setProgramId($programId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProgramId', [$programId]);

        return parent::setProgramId($programId);
    }

    /**
     * {@inheritDoc}
     */
    public function getProgramId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgramId', []);

        return parent::getProgramId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function addProductImage(\Application\Entity\ProductImage $productImage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProductImage', [$productImage]);

        return parent::addProductImage($productImage);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProductImage(\Application\Entity\ProductImage $productImage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProductImage', [$productImage]);

        return parent::removeProductImage($productImage);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductImage', []);

        return parent::getProductImage();
    }

    /**
     * {@inheritDoc}
     */
    public function addProperty(\Application\Entity\Property $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProperty', [$property]);

        return parent::addProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProperty(\Application\Entity\Property $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProperty', [$property]);

        return parent::removeProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function getProperty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProperty', []);

        return parent::getProperty();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\Application\Entity\Category $category = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationDate($creationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationDate', [$creationDate]);

        return parent::setCreationDate($creationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationDate', []);

        return parent::getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedDate($modifiedDate = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedDate', [$modifiedDate]);

        return parent::setModifiedDate($modifiedDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedDate', []);

        return parent::getModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedBy($modifiedBy = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedBy', [$modifiedBy]);

        return parent::setModifiedBy($modifiedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedBy', []);

        return parent::getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeed(\Application\Entity\Feed $feed = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeed', [$feed]);

        return parent::setFeed($feed);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeed', []);

        return parent::getFeed();
    }

}
